events {
    worker_connections 1024;
}

http {
    # Basic settings
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 50M;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=2r/s;

    # Upstream for MCP server
    upstream mcp_server {
        server meta-analysis-server:3000 max_fails=3 fail_timeout=30s;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # MCP server proxy (not directly accessible via HTTP, but for health checks)
        location /mcp-health {
            limit_req zone=api_limit burst=5 nodelay;
            
            proxy_pass http://mcp_server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Static file serving for generated plots and reports
        location /static/ {
            alias /app/user_sessions/;
            expires 1h;
            add_header Cache-Control "public, immutable";
            
            # Only serve safe file types
            location ~* \.(png|jpg|jpeg|pdf|html)$ {
                try_files $uri =404;
            }
        }

        # Monitoring endpoints (basic auth required in production)
        location /metrics {
            return 200 "MCP Meta-Analysis Server Metrics\n";
            add_header Content-Type text/plain;
        }

        # Default location - informational page
        location / {
            return 200 '<!DOCTYPE html>
<html>
<head>
    <title>MCP Meta-Analysis Server</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        h1 { color: #2c3e50; }
        .status { color: #27ae60; font-weight: bold; }
        .info { background: #e8f4f8; padding: 15px; border-radius: 4px; margin: 20px 0; }
        ul { line-height: 1.6; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üß¨ MCP Meta-Analysis Server</h1>
        <p class="status">‚úÖ Server Status: Running</p>
        
        <div class="info">
            <h3>üìã Available Services</h3>
            <ul>
                <li><strong>MCP Server</strong>: Running on port 3000 (internal)</li>
                <li><strong>Grafana Dashboard</strong>: <a href="http://localhost:3001">http://localhost:3001</a></li>
                <li><strong>Prometheus Metrics</strong>: <a href="http://localhost:9090">http://localhost:9090</a></li>
                <li><strong>Health Check</strong>: <a href="/health">/health</a></li>
            </ul>
        </div>

        <div class="info">
            <h3>üîó Integration</h3>
            <p>This server provides Model Context Protocol (MCP) tools for meta-analysis.</p>
            <p><strong>Claude Desktop Users</strong>: The server is accessible via MCP protocol on the configured port.</p>
            <p><strong>Available Tools</strong>: 8 statistical tools for comprehensive meta-analysis workflows.</p>
        </div>

        <div class="info">
            <h3>üìä Features</h3>
            <ul>
                <li>Statistical meta-analysis (OR, RR, MD, SMD, HR)</li>
                <li>Forest and funnel plot generation</li>
                <li>Publication bias assessment</li>
                <li>Session management and data validation</li>
                <li>R statistical computing integration</li>
                <li>Comprehensive HTML reports</li>
            </ul>
        </div>
        
        <p><small>Version 1.0.0 | Built with ‚ù§Ô∏è for evidence-based research</small></p>
    </div>
</body>
</html>';
            add_header Content-Type text/html;
        }
    }

    # HTTPS server block (if SSL certificates are available)
    server {
        listen 443 ssl http2;
        server_name localhost;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;

        # HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;

        # Same locations as HTTP server
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        location /mcp-health {
            limit_req zone=api_limit burst=5 nodelay;
            
            proxy_pass http://mcp_server/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        location /static/ {
            alias /app/user_sessions/;
            expires 1h;
            add_header Cache-Control "public, immutable";
            
            location ~* \.(png|jpg|jpeg|pdf|html)$ {
                try_files $uri =404;
            }
        }

        location / {
            # Redirect to HTTPS info page or same content as HTTP
            return 200 '<!DOCTYPE html>
<html>
<head>
    <title>MCP Meta-Analysis Server - Secure</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        h1 { color: #2c3e50; }
        .status { color: #27ae60; font-weight: bold; }
        .secure { color: #e67e22; font-weight: bold; }
        .info { background: #e8f4f8; padding: 15px; border-radius: 4px; margin: 20px 0; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üîí MCP Meta-Analysis Server (HTTPS)</h1>
        <p class="status">‚úÖ Server Status: Running</p>
        <p class="secure">üîê Secure Connection Active</p>
        
        <div class="info">
            <p>MCP Meta-Analysis Server is running securely with SSL/TLS encryption.</p>
            <p>Access monitoring dashboards and services through the configured ports.</p>
        </div>
    </div>
</body>
</html>';
            add_header Content-Type text/html;
        }
    }
}