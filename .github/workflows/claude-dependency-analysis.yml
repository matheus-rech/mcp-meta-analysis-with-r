name: Claude Dependency Analysis

on:
  schedule:
    - cron: '0 9 * * 1'  # Weekly on Monday 9am
  workflow_dispatch:

jobs:
  analyze-dependencies:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      security-events: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Claude CLI and tools
        run: |
          npm install -g @claude-ai/cli
          npm install -g npm-check-updates
          pip install safety
      
      - name: Analyze current dependencies
        id: deps
        run: |
          # Check for outdated packages
          npx ncu --format json > outdated-deps.json || true
          
          # Security audit
          npm audit --json > npm-audit.json || true
          
          # Count issues
          OUTDATED=$(cat outdated-deps.json | jq 'length')
          VULNERABILITIES=$(cat npm-audit.json | jq '.metadata.vulnerabilities | to_entries | map(.value) | add' || echo "0")
          
          echo "outdated=$OUTDATED" >> $GITHUB_OUTPUT
          echo "vulnerabilities=$VULNERABILITIES" >> $GITHUB_OUTPUT
      
      - name: Claude dependency analysis
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Create analysis script using Claude SDK streaming
          cat > analyze-deps.sh << 'EOF'
          #!/bin/bash
          
          # Function to analyze dependency updates with Claude
          analyze_updates() {
              # Create a conversation stream with Claude
              (
                # First message: context
                cat << 'MSG1'
          {
            "type": "user",
            "message": {
              "role": "user",
              "content": [{
                "type": "text",
                "text": "You are analyzing npm dependencies for a Meta-Analysis MCP Server that uses R for statistical computations. I'll provide dependency information and you should analyze:\n1. Which updates are safe\n2. Which might have breaking changes\n3. Security implications\n4. Performance impacts\n5. Compatibility with R integration"
              }]
            }
          }
          MSG1
          
                # Second message: outdated dependencies
                cat << MSG2
          {
            "type": "user",
            "message": {
              "role": "user",
              "content": [{
                "type": "text",
                "text": "Outdated dependencies:\n```json\n$(cat outdated-deps.json)\n```"
              }]
            }
          }
          MSG2
          
                # Third message: security audit
                cat << MSG3
          {
            "type": "user",
            "message": {
              "role": "user",
              "content": [{
                "type": "text",
                "text": "Security audit results:\n```json\n$(cat npm-audit.json | jq '.advisories')\n```\n\nProvide a prioritized update plan with:\n1. Critical security fixes\n2. Safe minor updates\n3. Major updates requiring testing\n4. Updates to skip and why"
              }]
            }
          }
          MSG3
              ) | claude -p --output-format=stream-json --input-format=stream-json --verbose > claude-stream.jsonl
              
              # Extract the final response
              tail -1 claude-stream.jsonl | jq -r '.result' > dependency-analysis.md
          }
          
          # Run the analysis
          analyze_updates
          EOF
          
          chmod +x analyze-deps.sh
          ./analyze-deps.sh
      
      - name: Generate update PR
        run: |
          # Create update script based on Claude's analysis
          cat > apply-updates.js << 'EOF'
          const fs = require('fs');
          const { execSync } = require('child_process');
          
          // Read Claude's analysis
          const analysis = fs.readFileSync('dependency-analysis.md', 'utf8');
          
          // Extract recommended updates (simplified - in practice would parse more carefully)
          const criticalUpdates = analysis.match(/Critical:.*?(?=\n\n)/gs) || [];
          const safeUpdates = analysis.match(/Safe minor:.*?(?=\n\n)/gs) || [];
          
          // Apply critical security updates
          console.log('Applying critical security updates...');
          try {
              execSync('npm audit fix --force', { stdio: 'inherit' });
          } catch (e) {
              console.log('Some audit fixes may have failed');
          }
          
          // Apply safe minor updates
          console.log('Applying safe minor updates...');
          execSync('npx ncu -u --target minor', { stdio: 'inherit' });
          
          // Install updated dependencies
          execSync('npm install', { stdio: 'inherit' });
          
          // Run tests
          console.log('Running tests...');
          try {
              execSync('npm test', { stdio: 'inherit' });
              console.log('All tests passed!');
          } catch (e) {
              console.error('Tests failed - manual review needed');
          }
          EOF
          
          node apply-updates.js
      
      - name: Create detailed PR
        if: steps.deps.outputs.outdated != '0' || steps.deps.outputs.vulnerabilities != '0'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: Update dependencies based on Claude analysis"
          title: "🔄 Intelligent dependency updates"
          body: |
            ## 🤖 Claude Dependency Analysis
            
            This PR contains dependency updates analyzed and recommended by Claude.
            
            ### Summary
            - **Outdated packages:** ${{ steps.deps.outputs.outdated }}
            - **Security vulnerabilities:** ${{ steps.deps.outputs.vulnerabilities }}
            
            ### Claude's Analysis
            
            $(cat dependency-analysis.md)
            
            ### Automated Actions Taken
            1. ✅ Applied critical security fixes
            2. ✅ Updated safe minor versions
            3. ✅ Ran test suite
            4. ⏳ Major updates require manual review
            
            ### Manual Review Needed
            - [ ] Review major version updates
            - [ ] Test R integration functionality
            - [ ] Verify Docker build still works
            - [ ] Check for any breaking changes
            
            ---
            *Generated by Claude Code SDK with intelligent analysis*
          branch: claude-dependency-updates
          delete-branch: true